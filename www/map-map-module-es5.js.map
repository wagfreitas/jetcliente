{"version":3,"sources":["webpack:///src/app/map/map.page.html","webpack:///src/app/map/map-routing.module.ts","webpack:///src/app/map/map.module.ts","webpack:///src/app/map/map.page.scss","webpack:///src/app/map/map.page.ts"],"names":["routes","path","component","MapPageRoutingModule","imports","forChild","exports","MapPageModule","declarations","MapPage","router","geolocation","chRef","route","placeService","tripService","loadMap","getCurrentPosition","then","resp","latLng","google","maps","LatLng","coords","latitude","longitude","mapOptions","center","mapTypeId","MapTypeId","ROADMAP","map","Map","document","getElementById","marker","Marker","position","setMap","findPlace","addListener","event","getCenter","error","console","log","nativeHomeInputBox","googleAutocomplete","places","Autocomplete","lat","getPlace","geometry","location","lng","panTo","geocoder","Geocoder","geocode","results","status","GeocoderStatus","OK","address","detectChanges","formatAddress","queryParams","subscribe","data","type","setOrigin","vicinity","setDestination","navigateByUrl","selector","template"],"mappings":"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","file":"map-map-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <input class=\\\"locationinput\\\" type=\\\"text\\\" id=\\\"searchbar\\\" #searchbar placeholder=\\\"search location or drag map\\\"\\n      autofocus />\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"selectPlace()\\\">{{'DONE' | translate}}</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <p class=\\\"place-text\\\">{{ address ? address.formatted_address : '' }}</p>\\n  <div #map id=\\\"map\\\"></div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MapPage } from './map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapPageRoutingModule } from './map-routing.module';\n\nimport { MapPage } from './map.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    MapPageRoutingModule\n  ],\n  declarations: [MapPage]\n})\nexport class MapPageModule {}\n","export default \"#map {\\n  height: 100%;\\n}\\n\\n.marker {\\n  position: fixed;\\n  z-index: 1000;\\n  top: 45%;\\n  left: 45%;\\n}\\n\\n.locationinput {\\n  background: #eee;\\n  border: 0;\\n  outline: 0;\\n  width: 100%;\\n  padding: 0.5rem;\\n  color: #333;\\n  margin: 4px;\\n  font-size: 14px;\\n  border-radius: 4px;\\n}\\n\\n.place-text {\\n  margin: 4px 0px;\\n  font-size: 12px;\\n  text-align: center;\\n  color: #777;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL21hcC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0o7O0FBRUU7RUFDRSxlQUFBO0VBQ0EsYUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUNBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFFRiIsImZpbGUiOiJzcmMvYXBwL21hcC9tYXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG5cbiAgLm1hcmtlciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDEwMDA7XG4gICAgdG9wOjQ1JTtcbiAgICBsZWZ0OiA0NSU7O1xuICB9XG5cbiAgLmxvY2F0aW9uaW5wdXR7XG4gICAgYmFja2dyb3VuZDogI2VlZTtcbiAgICBib3JkZXI6MDtcbiAgICBvdXRsaW5lOjA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIG1hcmdpbjogNHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIH1cbi5wbGFjZS10ZXh0e1xuICBtYXJnaW46IDRweCAwcHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzc3Nztcbn0iXX0= */\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { PlaceService } from '../services/place.service';\nimport { TripService } from '../services/trip.service';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment.prod';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.page.html',\n  styleUrls: ['./map.page.scss'],\n})\n\n\nexport class MapPage implements OnInit {\n\n  ngOnInit() {\n  }\n\n  map: any;\n\n  // pin address\n  address: any;\n  marker: any;\n  lat: any;\n  lng: any;\n  googleAutocomplete: any;\n\n  constructor(\n    private router: Router,\n    private geolocation: Geolocation,\n    private chRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private placeService: PlaceService,\n    private tripService: TripService) {\n  }\n\n  // Load map only after view is initialized\n  ionViewDidEnter() {\n    this.loadMap();\n  }\n\n  loadMap() {\n    // set current location as map center\n    this.geolocation.getCurrentPosition().then((resp) => {\n      let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n      let mapOptions: any = environment.mapOptions;\n      mapOptions.center = latLng;\n      mapOptions.mapTypeId = google.maps.MapTypeId.ROADMAP;\n\n      this.map = new google.maps.Map(document.getElementById('map'), mapOptions);\n\n      this.marker = new google.maps.Marker({\n        map: this.map,\n        position: latLng\n      });\n      this.marker.setMap(this.map);\n\n      // get center's address\n      this.findPlace(latLng);\n\n      this.map.addListener('center_changed', (event) => {\n        let center = this.map.getCenter();\n        this.findPlace(center);\n      })\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n\n\n    var nativeHomeInputBox = document.getElementById('searchbar');\n\n    this.googleAutocomplete = new google.maps.places.Autocomplete(nativeHomeInputBox);\n    google.maps.event.addListener(this.googleAutocomplete, 'place_changed', () => {\n      this.lat = this.googleAutocomplete.getPlace().geometry.location.lat();\n      this.lng = this.googleAutocomplete.getPlace().geometry.location.lng();\n      this.map.panTo(new google.maps.LatLng(this.lat, this.lng));\n      this.findPlace(new google.maps.LatLng(this.lat, this.lng));\n    });\n  }\n\n  // find address by LatLng\n  findPlace(latLng) {\n    let geocoder = new google.maps.Geocoder();\n\n    this.marker.setMap(null);\n    this.marker = new google.maps.Marker({ map: this.map, position: latLng });\n    this.marker.setMap(this.map);\n\n    geocoder.geocode({ 'latLng': latLng }, (results, status) => {\n      if (status == google.maps.GeocoderStatus.OK) {\n        this.address = results[0];\n        console.log(this.address);\n        this.chRef.detectChanges();\n      }\n    });\n  }\n\n  // choose address and go back to home page\n  selectPlace() {\n\n    let address = this.placeService.formatAddress(this.address);\n    console.log(address);\n\n    this.route.queryParams.subscribe(data => {\n      let type = data.type\n      if (type == 'origin') {\n        this.tripService.setOrigin(address.vicinity, address.location.lat, address.location.lng);\n      } else if (type == 'destination') {\n        this.tripService.setDestination(address.vicinity, address.location.lat, address.location.lng);\n      }\n      this.router.navigateByUrl('/home');\n\n    });\n\n\n  }\n\n}\n"]}