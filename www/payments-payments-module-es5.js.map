{"version":3,"sources":["webpack:///src/app/payments/payments.page.html","webpack:///src/app/payments/payments-routing.module.ts","webpack:///src/app/payments/payments.module.ts","webpack:///src/app/payments/payments.page.scss","webpack:///src/app/payments/payments.page.ts"],"names":["routes","path","component","PaymentsPageRoutingModule","imports","forChild","exports","PaymentsPageModule","declarations","PaymentsPage","translate","authService","common","getUserData","then","user","uid","getCardSetting","valueChanges","pipe","subscribe","snapshot","number","exp","cvv","split","showLoader","Stripe","card","createToken","replace","exp_month","exp_year","cvc","status","response","hideLoader","updateCardSetting","id","showToast","error","message","selector","template"],"mappings":"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","file":"payments-payments-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>{{'PAYMENTS' | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label position=\\\"stacked\\\">{{'CARD_NUMBER' | translate}}</ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"number\\\" size=\\\"20\\\"></ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"8\\\">\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label position=\\\"stacked\\\">{{'EXPIRE_DATE' | translate}} (MM/YY)</ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"exp\\\" size=\\\"5\\\"></ion-input>\\n        </ion-item>\\n      </ion-col>\\n      <ion-col size=\\\"4\\\">\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label position=\\\"stacked\\\">{{'CVV' | translate}}</ion-label>\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"cvv\\\" size=\\\"4\\\"></ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <div class=\\\"ion-padding\\\">\\n    <ion-button expand=\\\"block\\\" color=\\\"dark\\\" (click)=\\\"saveCard()\\\">{{'SAVE' | translate}}</ion-button>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentsPage } from './payments.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentsPageRoutingModule } from './payments-routing.module';\n\nimport { PaymentsPage } from './payments.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    PaymentsPageRoutingModule\n  ],\n  declarations: [PaymentsPage]\n})\nexport class PaymentsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnRzL3BheW1lbnRzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '../services/auth.service';\nimport { take } from 'rxjs/operators';\nimport { CommonService } from '../services/common.service';\n\n\ndeclare var Stripe: any;\n\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.page.html',\n  styleUrls: ['./payments.page.scss'],\n})\n\nexport class PaymentsPage implements OnInit {\n\n  number: any;\n  exp: any;\n  cvv: any;\n  uid: any;\n\n  constructor(\n    private translate: TranslateService,\n    private authService: AuthService,\n    private common: CommonService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getUserData().then(user => {\n      if (user != null) {\n        this.uid = user.uid;\n        this.authService.getCardSetting(this.uid).valueChanges().pipe(take(1)).subscribe((snapshot: any) => {\n          if (snapshot != null) {\n            this.number = snapshot.number;\n            this.exp = snapshot.exp;\n            this.cvv = snapshot.cvv;\n          }\n        });\n      }\n    })\n  }\n\n\n  saveCard() {\n    const exp = this.exp.split('/');\n    this.common.showLoader();\n\n    Stripe.card.createToken({\n      number: (this.number).replace(/\\s/g, ''),\n      exp_month: exp[0],\n      exp_year: exp[1],\n      cvc: this.cvv\n    }, (status: number, response: any) => {\n      this.common.hideLoader()\n      // success\n      if (status == 200) {\n        this.authService.updateCardSetting(this.number, this.exp, this.cvv, response.id, this.uid);\n        this.common.showToast(\"Card Updated\");\n      } else {\n        this.common.showToast(response.error.message);\n      }\n    });\n  }\n\n}\n"]}